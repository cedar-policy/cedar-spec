{
    "schema": {
        "entityTypes": [
            [
                "User",
                {
                    "name": "User",
                    "descendants": [],
                    "attributes": {
                        "attrs": {
                            "department": {
                                "attrType": {
                                    "Primitive": {
                                        "primitiveType": "String"
                                    }
                                },
                                "isRequired": true
                            },
                            "jobLevel": {
                                "attrType": {
                                    "Primitive": {
                                        "primitiveType": "Long"
                                    }
                                },
                                "isRequired": true
                            }
                        }
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ],
            [
                "UserGroup",
                {
                    "name": "UserGroup",
                    "descendants": [
                        "User"
                    ],
                    "attributes": {
                        "attrs": {}
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ],
            [
                "AccountGroup",
                {
                    "name": "AccountGroup",
                    "descendants": [
                        "Account",
                        "Album",
                        "Photo"
                    ],
                    "attributes": {
                        "attrs": {
                            "owner": {
                                "attrType": {
                                    "EntityOrRecord": {
                                        "Entity": {
                                            "lub_elements": [
                                                "User"
                                            ]
                                        }
                                    }
                                },
                                "isRequired": true
                            }
                        }
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ],
            [
                "Administrator",
                {
                    "name": "Administrator",
                    "descendants": [],
                    "attributes": {
                        "attrs": {}
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ],
            [
                "Photo",
                {
                    "name": "Photo",
                    "descendants": [],
                    "attributes": {
                        "attrs": {
                            "account": {
                                "attrType": {
                                    "EntityOrRecord": {
                                        "Entity": {
                                            "lub_elements": [
                                                "Account"
                                            ]
                                        }
                                    }
                                },
                                "isRequired": true
                            },
                            "admins": {
                                "attrType": {
                                    "Set": {
                                        "elementType": {
                                            "EntityOrRecord": {
                                                "Entity": {
                                                    "lub_elements": [
                                                        "User"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                },
                                "isRequired": true
                            },
                            "private": {
                                "attrType": {
                                    "Primitive": {
                                        "primitiveType": "Bool"
                                    }
                                },
                                "isRequired": true
                            }
                        }
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ],
            [
                "Album",
                {
                    "name": "Album",
                    "descendants": [
                        "Photo",
                        "Album"
                    ],
                    "attributes": {
                        "attrs": {
                            "account": {
                                "attrType": {
                                    "EntityOrRecord": {
                                        "Entity": {
                                            "lub_elements": [
                                                "Account"
                                            ]
                                        }
                                    }
                                },
                                "isRequired": true
                            },
                            "admins": {
                                "attrType": {
                                    "Set": {
                                        "elementType": {
                                            "EntityOrRecord": {
                                                "Entity": {
                                                    "lub_elements": [
                                                        "User"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                },
                                "isRequired": true
                            },
                            "private": {
                                "attrType": {
                                    "Primitive": {
                                        "primitiveType": "Bool"
                                    }
                                },
                                "isRequired": true
                            }
                        }
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ],
            [
                "Account",
                {
                    "name": "Account",
                    "descendants": [
                        "Photo",
                        "Album"
                    ],
                    "attributes": {
                        "attrs": {
                            "admins": {
                                "attrType": {
                                    "Set": {
                                        "elementType": {
                                            "EntityOrRecord": {
                                                "Entity": {
                                                    "lub_elements": [
                                                        "User"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                },
                                "isRequired": true
                            },
                            "owner": {
                                "attrType": {
                                    "EntityOrRecord": {
                                        "Entity": {
                                            "lub_elements": [
                                                "User"
                                            ]
                                        }
                                    }
                                },
                                "isRequired": true
                            },
                            "private": {
                                "attrType": {
                                    "Primitive": {
                                        "primitiveType": "Bool"
                                    }
                                },
                                "isRequired": true
                            }
                        }
                    },
                    "open_attributes": "ClosedAttributes"
                }
            ]
        ],
        "actionIds": [
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "addPhoto"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "addPhoto"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Album"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        },
                                        "photo": {
                                            "attrType": {
                                                "EntityOrRecord": {
                                                    "Record": {
                                                        "attrs": {
                                                            "attrs": {
                                                                "filesize_mb": {
                                                                    "attrType": {
                                                                        "Primitive": {
                                                                            "primitiveType": "Long"
                                                                        }
                                                                    },
                                                                    "isRequired": true
                                                                },
                                                                "filetype": {
                                                                    "attrType": {
                                                                        "Primitive": {
                                                                            "primitiveType": "String"
                                                                        }
                                                                    },
                                                                    "isRequired": true
                                                                }
                                                            }
                                                        },
                                                        "open_attributes": "ClosedAttributes"
                                                    }
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ],
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "edit"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "edit"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Photo"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ],
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "listAlbums"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "listAlbums"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Account"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ],
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "listPhotos"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "listPhotos"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Album"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ],
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "delete"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "delete"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Photo"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ],
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "comment"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "comment"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Photo"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ],
            [
                {
                    "ty": {
                        "Specified": "Action"
                    },
                    "eid": "view"
                },
                {
                    "name": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "view"
                    },
                    "appliesTo": {
                        "principalApplySpec": [
                            {
                                "Specified": "User"
                            }
                        ],
                        "resourceApplySpec": [
                            {
                                "Specified": "Photo"
                            }
                        ]
                    },
                    "descendants": [],
                    "context": {
                        "EntityOrRecord": {
                            "Record": {
                                "attrs": {
                                    "attrs": {
                                        "authenticated": {
                                            "attrType": {
                                                "Primitive": {
                                                    "primitiveType": "Bool"
                                                }
                                            },
                                            "isRequired": true
                                        }
                                    }
                                },
                                "open_attributes": "ClosedAttributes"
                            }
                        }
                    },
                    "attribute_types": {
                        "attrs": {}
                    },
                    "attributes": {}
                }
            ]
        ]
    },
    "policies": {
        "templates": {
            "policy0": {
                "id": "policy0",
                "annotations": {},
                "effect": "permit",
                "principal_constraint": {
                    "constraint": {
                        "In": {
                            "EUID": {
                                "ty": {
                                    "Specified": "UserGroup"
                                },
                                "eid": "alice_friends"
                            }
                        }
                    }
                },
                "action_constraint": {
                    "Eq": {
                        "ty": {
                            "Specified": "Action"
                        },
                        "eid": "view"
                    }
                },
                "resource_constraint": {
                    "constraint": {
                        "In": {
                            "EUID": {
                                "ty": {
                                    "Specified": "Account"
                                },
                                "eid": "alice"
                            }
                        }
                    }
                },
                "non_head_constraints": {
                    "expr_kind": {
                        "Lit": {
                            "Bool": true
                        }
                    },
                    "source_loc": {
                        "span": {
                            "offset": 140,
                            "length": 113
                        },
                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                    },
                    "data": null
                }
            },
            "policy3": {
                "id": "policy3",
                "annotations": {},
                "effect": "forbid",
                "principal_constraint": {
                    "constraint": "Any"
                },
                "action_constraint": "Any",
                "resource_constraint": {
                    "constraint": "Any"
                },
                "non_head_constraints": {
                    "expr_kind": {
                        "UnaryApp": {
                            "op": "Not",
                            "arg": {
                                "expr_kind": {
                                    "GetAttr": {
                                        "expr": {
                                            "expr_kind": {
                                                "Var": "context"
                                            },
                                            "source_loc": {
                                                "span": {
                                                    "offset": 751,
                                                    "length": 7
                                                },
                                                "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                            },
                                            "data": null
                                        },
                                        "attr": "authenticated"
                                    }
                                },
                                "source_loc": {
                                    "span": {
                                        "offset": 751,
                                        "length": 21
                                    },
                                    "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                },
                                "data": null
                            }
                        }
                    },
                    "source_loc": {
                        "span": {
                            "offset": 750,
                            "length": 22
                        },
                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                    },
                    "data": null
                }
            },
            "policy2": {
                "id": "policy2",
                "annotations": {},
                "effect": "forbid",
                "principal_constraint": {
                    "constraint": "Any"
                },
                "action_constraint": "Any",
                "resource_constraint": {
                    "constraint": "Any"
                },
                "non_head_constraints": {
                    "expr_kind": {
                        "And": {
                            "left": {
                                "expr_kind": {
                                    "GetAttr": {
                                        "expr": {
                                            "expr_kind": {
                                                "Var": "resource"
                                            },
                                            "source_loc": {
                                                "span": {
                                                    "offset": 548,
                                                    "length": 8
                                                },
                                                "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                            },
                                            "data": null
                                        },
                                        "attr": "private"
                                    }
                                },
                                "source_loc": {
                                    "span": {
                                        "offset": 548,
                                        "length": 16
                                    },
                                    "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                },
                                "data": null
                            },
                            "right": {
                                "expr_kind": {
                                    "UnaryApp": {
                                        "op": "Not",
                                        "arg": {
                                            "expr_kind": {
                                                "And": {
                                                    "left": {
                                                        "expr_kind": {
                                                            "HasAttr": {
                                                                "expr": {
                                                                    "expr_kind": {
                                                                        "Var": "resource"
                                                                    },
                                                                    "source_loc": {
                                                                        "span": {
                                                                            "offset": 576,
                                                                            "length": 8
                                                                        },
                                                                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                                    },
                                                                    "data": null
                                                                },
                                                                "attr": "account"
                                                            }
                                                        },
                                                        "source_loc": {
                                                            "span": {
                                                                "offset": 576,
                                                                "length": 20
                                                            },
                                                            "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                        },
                                                        "data": null
                                                    },
                                                    "right": {
                                                        "expr_kind": {
                                                            "BinaryApp": {
                                                                "op": "Eq",
                                                                "arg1": {
                                                                    "expr_kind": {
                                                                        "GetAttr": {
                                                                            "expr": {
                                                                                "expr_kind": {
                                                                                    "GetAttr": {
                                                                                        "expr": {
                                                                                            "expr_kind": {
                                                                                                "Var": "resource"
                                                                                            },
                                                                                            "source_loc": {
                                                                                                "span": {
                                                                                                    "offset": 600,
                                                                                                    "length": 8
                                                                                                },
                                                                                                "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                                                            },
                                                                                            "data": null
                                                                                        },
                                                                                        "attr": "account"
                                                                                    }
                                                                                },
                                                                                "source_loc": {
                                                                                    "span": {
                                                                                        "offset": 600,
                                                                                        "length": 22
                                                                                    },
                                                                                    "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                                                },
                                                                                "data": null
                                                                            },
                                                                            "attr": "owner"
                                                                        }
                                                                    },
                                                                    "source_loc": {
                                                                        "span": {
                                                                            "offset": 600,
                                                                            "length": 22
                                                                        },
                                                                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                                    },
                                                                    "data": null
                                                                },
                                                                "arg2": {
                                                                    "expr_kind": {
                                                                        "Var": "principal"
                                                                    },
                                                                    "source_loc": {
                                                                        "span": {
                                                                            "offset": 626,
                                                                            "length": 9
                                                                        },
                                                                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                                    },
                                                                    "data": null
                                                                }
                                                            }
                                                        },
                                                        "source_loc": {
                                                            "span": {
                                                                "offset": 600,
                                                                "length": 35
                                                            },
                                                            "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                                        },
                                                        "data": null
                                                    }
                                                }
                                            },
                                            "source_loc": {
                                                "span": {
                                                    "offset": 576,
                                                    "length": 59
                                                },
                                                "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                            },
                                            "data": null
                                        }
                                    }
                                },
                                "source_loc": {
                                    "span": {
                                        "offset": 567,
                                        "length": 70
                                    },
                                    "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                },
                                "data": null
                            }
                        }
                    },
                    "source_loc": {
                        "span": {
                            "offset": 504,
                            "length": 134
                        },
                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                    },
                    "data": null
                }
            },
            "policy1": {
                "id": "policy1",
                "annotations": {},
                "effect": "permit",
                "principal_constraint": {
                    "constraint": "Any"
                },
                "action_constraint": "Any",
                "resource_constraint": {
                    "constraint": {
                        "In": {
                            "EUID": {
                                "ty": {
                                    "Specified": "Album"
                                },
                                "eid": "alice_vacation"
                            }
                        }
                    }
                },
                "non_head_constraints": {
                    "expr_kind": {
                        "BinaryApp": {
                            "op": "Eq",
                            "arg1": {
                                "expr_kind": {
                                    "GetAttr": {
                                        "expr": {
                                            "expr_kind": {
                                                "Var": "principal"
                                            },
                                            "source_loc": {
                                                "span": {
                                                    "offset": 401,
                                                    "length": 9
                                                },
                                                "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                            },
                                            "data": null
                                        },
                                        "attr": "department"
                                    }
                                },
                                "source_loc": {
                                    "span": {
                                        "offset": 401,
                                        "length": 20
                                    },
                                    "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                },
                                "data": null
                            },
                            "arg2": {
                                "expr_kind": {
                                    "Lit": {
                                        "String": "Sales"
                                    }
                                },
                                "source_loc": {
                                    "span": {
                                        "offset": 425,
                                        "length": 7
                                    },
                                    "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                                },
                                "data": null
                            }
                        }
                    },
                    "source_loc": {
                        "span": {
                            "offset": 401,
                            "length": 31
                        },
                        "src": "// Multiple permit and multiple forbid policies, which could apply in various\n// combinations\n// Alice's friends can view all of her photos\npermit (\n  principal in UserGroup::\"alice_friends\",\n  action == Action::\"view\",\n  resource in Account::\"alice\"\n);\n\n// Anyone in the Sales department can view Alice's vacation photos\npermit (\n  principal,\n  action,\n  resource in Album::\"alice_vacation\"\n)\nwhen { principal.department == \"Sales\" };\n\n// anything marked private can only be viewed by the account owner\nforbid (principal, action, resource)\nwhen { resource.private }\nunless { resource has account && resource.account.owner == principal };\n\n// deny all requests that have context.authenticated set to false\nforbid (principal, action, resource)\nwhen { !context.authenticated };\n"
                    },
                    "data": null
                }
            }
        },
        "links": {
            "policy3": {
                "template_id": "policy3",
                "link_id": null,
                "values": {}
            },
            "policy2": {
                "template_id": "policy2",
                "link_id": null,
                "values": {}
            },
            "policy1": {
                "template_id": "policy1",
                "link_id": null,
                "values": {}
            },
            "policy0": {
                "template_id": "policy0",
                "link_id": null,
                "values": {}
            }
        }
    },
    "mode": "Strict"
}